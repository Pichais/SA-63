// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// OrgansColumns holds the columns for the "organs" table.
	OrgansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "organ_name", Type: field.TypeString},
	}
	// OrgansTable holds the schema information for the "organs" table.
	OrgansTable = &schema.Table{
		Name:        "organs",
		Columns:     OrgansColumns,
		PrimaryKey:  []*schema.Column{OrgansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PhysiciansColumns holds the columns for the "physicians" table.
	PhysiciansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "physician_name", Type: field.TypeString},
		{Name: "physician_email", Type: field.TypeString},
	}
	// PhysiciansTable holds the schema information for the "physicians" table.
	PhysiciansTable = &schema.Table{
		Name:        "physicians",
		Columns:     PhysiciansColumns,
		PrimaryKey:  []*schema.Column{PhysiciansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SpacialitiesColumns holds the columns for the "spacialities" table.
	SpacialitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "organ_forogan", Type: field.TypeInt, Nullable: true},
		{Name: "physician_foruser", Type: field.TypeInt, Nullable: true},
		{Name: "type_disease_fortype", Type: field.TypeInt, Nullable: true},
	}
	// SpacialitiesTable holds the schema information for the "spacialities" table.
	SpacialitiesTable = &schema.Table{
		Name:       "spacialities",
		Columns:    SpacialitiesColumns,
		PrimaryKey: []*schema.Column{SpacialitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "spacialities_organs_forogan",
				Columns: []*schema.Column{SpacialitiesColumns[1]},

				RefColumns: []*schema.Column{OrgansColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "spacialities_physicians_foruser",
				Columns: []*schema.Column{SpacialitiesColumns[2]},

				RefColumns: []*schema.Column{PhysiciansColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "spacialities_type_diseases_fortype",
				Columns: []*schema.Column{SpacialitiesColumns[3]},

				RefColumns: []*schema.Column{TypeDiseasesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TypeDiseasesColumns holds the columns for the "type_diseases" table.
	TypeDiseasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "disease_name", Type: field.TypeString, Unique: true},
	}
	// TypeDiseasesTable holds the schema information for the "type_diseases" table.
	TypeDiseasesTable = &schema.Table{
		Name:        "type_diseases",
		Columns:     TypeDiseasesColumns,
		PrimaryKey:  []*schema.Column{TypeDiseasesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OrgansTable,
		PhysiciansTable,
		SpacialitiesTable,
		TypeDiseasesTable,
	}
)

func init() {
	SpacialitiesTable.ForeignKeys[0].RefTable = OrgansTable
	SpacialitiesTable.ForeignKeys[1].RefTable = PhysiciansTable
	SpacialitiesTable.ForeignKeys[2].RefTable = TypeDiseasesTable
}
