// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Pichais/app/ent/organ"
	"github.com/Pichais/app/ent/physician"
	"github.com/Pichais/app/ent/schema"
	"github.com/Pichais/app/ent/typedisease"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	organFields := schema.Organ{}.Fields()
	_ = organFields
	// organDescOrganName is the schema descriptor for OrganName field.
	organDescOrganName := organFields[0].Descriptor()
	// organ.OrganNameValidator is a validator for the "OrganName" field. It is called by the builders before save.
	organ.OrganNameValidator = organDescOrganName.Validators[0].(func(string) error)
	physicianFields := schema.Physician{}.Fields()
	_ = physicianFields
	// physicianDescPhysicianName is the schema descriptor for PhysicianName field.
	physicianDescPhysicianName := physicianFields[0].Descriptor()
	// physician.PhysicianNameValidator is a validator for the "PhysicianName" field. It is called by the builders before save.
	physician.PhysicianNameValidator = physicianDescPhysicianName.Validators[0].(func(string) error)
	// physicianDescPhysicianEmail is the schema descriptor for PhysicianEmail field.
	physicianDescPhysicianEmail := physicianFields[1].Descriptor()
	// physician.PhysicianEmailValidator is a validator for the "PhysicianEmail" field. It is called by the builders before save.
	physician.PhysicianEmailValidator = physicianDescPhysicianEmail.Validators[0].(func(string) error)
	typediseaseFields := schema.TypeDisease{}.Fields()
	_ = typediseaseFields
	// typediseaseDescDiseaseName is the schema descriptor for DiseaseName field.
	typediseaseDescDiseaseName := typediseaseFields[0].Descriptor()
	// typedisease.DiseaseNameValidator is a validator for the "DiseaseName" field. It is called by the builders before save.
	typedisease.DiseaseNameValidator = typediseaseDescDiseaseName.Validators[0].(func(string) error)
}
