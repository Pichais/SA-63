/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntPhysicianEdges,
    EntPhysicianEdgesFromJSON,
    EntPhysicianEdgesFromJSONTyped,
    EntPhysicianEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntPhysician
 */
export interface EntPhysician {
    /**
     * PhysicianEmail holds the value of the "PhysicianEmail" field.
     * @type {string}
     * @memberof EntPhysician
     */
    physicianEmail?: string;
    /**
     * PhysicianName holds the value of the "PhysicianName" field.
     * @type {string}
     * @memberof EntPhysician
     */
    physicianName?: string;
    /**
     * 
     * @type {EntPhysicianEdges}
     * @memberof EntPhysician
     */
    edges?: EntPhysicianEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntPhysician
     */
    id?: number;
}

export function EntPhysicianFromJSON(json: any): EntPhysician {
    return EntPhysicianFromJSONTyped(json, false);
}

export function EntPhysicianFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntPhysician {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'physicianEmail': !exists(json, 'PhysicianEmail') ? undefined : json['PhysicianEmail'],
        'physicianName': !exists(json, 'PhysicianName') ? undefined : json['PhysicianName'],
        'edges': !exists(json, 'edges') ? undefined : EntPhysicianEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function EntPhysicianToJSON(value?: EntPhysician | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'PhysicianEmail': value.physicianEmail,
        'PhysicianName': value.physicianName,
        'edges': EntPhysicianEdgesToJSON(value.edges),
        'id': value.id,
    };
}


